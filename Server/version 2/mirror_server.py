import os
import math
from flask import Flask, request, redirect, url_for, make_response
import numpy as np
from werkzeug import secure_filename
from rotate import rotate
from find_rect_range import find_rect_range
import dlib
from imread_with_EXIF_orientation import imread_with_EXIF_orientation
from feedforward import feedforward

predictor_path = r"C:\Users\Miotio\Dropbox\Programming\python\faceArt\landmarks\shape_predictor_68_face_landmarks.dat"
detector = dlib.get_frontal_face_detector()
predictor = dlib.shape_predictor(predictor_path)

weights = [[[-5.389078762718342, -4.0713677453363495, 9.387938086604004, -0.28348401964232056, -1.7250385811619626, 0.2639854895147078, -1.740492935830756, -2.6179065914991466, -3.159964713544571, -2.303431842449734, 5.568969994979591, 2.695280775373615, -1.5540320811895243, -1.348249690939899, -2.943343794809159, -8.65425528589603, 6.227567112171775, 8.54233011460769, -5.2362207830506176, -6.540431643263337, -0.5281602658574873, -0.4091181330027468, 4.448685889283134, 1.098979695048361, -2.1514379558883916, -3.772153905932997, -2.2463964831056336, 0.07227446974640038, 0.6572153011958721, -1.4898651730359733, 7.63950716041212, 1.511682759862431, -6.598283871893387, -4.833073379362653, -0.7556543239559917, 14.181773119517404, -10.390429211927136, -3.461282115360637, -0.6591525450527762, 3.3242693179115492, 4.322826373173699, -0.19604831646091161, 7.115069480004106, -10.272239107905166, 9.968456604899629, -10.541393612420576, 4.184374592553136, 0.046054866199498126, 2.5435303846193333, 4.386007426229161, -12.047479626470386, -2.9337728110912886, -1.3191897823101428, 13.86847814960525, -0.30673890097135253, 3.7011391487037058, 4.190383621910982, -0.1454087724634924, 4.855124397858374, 2.9402096798103456, 5.004043617376988, 5.929738042950865, -7.237049295477393, -14.396697284185601, 0.9807558429161864, -1.3036999678287597, 2.1945207335524097, 3.7959531380754443, 0.9108398913300108, -2.1335790458356425, -7.783385465226611, -9.645937000299917, 3.9440760194938562, -5.6973160361935795, 1.136970912056852, 2.5462299891662785, 2.5836495373738484, 5.729707881507378, 0.05238489275771806, -6.739171691563655, 1.106843893158627, 4.663770046587917, -2.738132997729374, 0.057897621605490494, 0.7940206366557612, -6.628366584604995, 1.8971292126579968, 5.89227000431526, 2.8517436351172964, 2.978840790550492, 8.6417155708797, -7.843524339386181, -2.471535939444208, -2.1141938892660543, -2.5186450555414286, 1.4466026089178836, 1.7926055263460903, 4.99353544187252, -2.487869367204497, 1.1171349825379837, -1.018987478350121, 2.2830528507344887, -1.2074456387532642, 9.541785768440503, -0.39780569448341896, 1.7449413754143976, -4.356326535728798, 1.5953291324881174, 1.4605084297353825, 5.2937315362075745, 0.20966428950369614, -0.6440779873524911, -1.0751324215937075, -7.392459479355315, 4.000994078352432, 0.6432659993184203, -2.483757635567658, -4.024856615222787, 4.775292405410233, 0.960214025151909, -5.520179792780529, -1.4999258611849395, 2.189285544642253, -5.739583657677548, 5.724894737055511, 2.6511939755842633, 3.25753262527777, -6.407314904788612, -4.769380427650765, 2.908486789768836, -0.8785155768322547, -2.968646666359545, 2.0799134591850255, 6.06665011165357, -0.12174063975570361, -3.5739396972842785, 5.202280301063377], [-0.37883724522305384, 3.2527097376609473, -3.19283524186787, 1.126649642372562, 0.8749652285044398, -0.9404893411688008, 0.21028158300800964, 2.6113659381466174, 2.1509942788697187, 2.273039898174628, 0.055075463422973876, -2.1207511646353066, -0.17956699431499748, -2.81578719674049, 0.5792529863492575, -1.0825962504933992, -0.6945424188095083, -4.165504641976397, 3.2234201976930117, 2.5223660111094675, 1.4895074411212321, 2.0248740554933375, -0.07324630472506359, 0.8746682805668038, 0.9568469520941947, 3.414317204508997, 0.0033061541033167405, -1.050708864466825, -3.162696340434866, -2.763732406664364, -4.810510012089303, -1.1574903678564419, 3.448529080368971, 0.931378492158597, -0.044969005984239155, -3.8157304931701335, 1.7498288432400833, 0.28730042770095127, 0.0837624247522463, -1.4809001495287686, -0.5739060400951485, -1.7476851484186493, -3.051091356956602, 1.9736942425906774, 0.021080400669515918, 4.943790930529439, -0.9730364336621229, -0.1285289975535291, 1.8463580040030267, 1.1376241924702648, 5.315644177833596, 0.6459103607324409, 0.6600737923143131, -6.370797741042058, -0.5834462787468686, 0.3555290505673269, -1.0279342000999792, -0.5492405454570201, -0.2318162269264338, -1.0586160992828006, -0.030283424902995314, -1.5361143475574905, 3.4179453689842245, 2.889926729045819, -0.0840365624677411, 2.225245392944864, -3.6951391715739534, -0.7055948595916581, -0.8496521810299752, -0.13051227417162542, 3.7197914613927576, 0.5661749825338508, 0.1109430982271796, 0.8487550645372901, 0.5116975228264644, -0.07956829830386701, -0.30288542721507844, -1.3034784991100106, 1.0198132408299148, 1.9220899022578506, 0.932580880482899, -1.0849767023272614, 1.3113545369868562, 1.1088065200720052, -1.9669768896263264, -0.04074625949659797, -2.168192243146621, -2.1861867907292383, -0.32469246943892716, 0.07177861757492439, -0.583617025905533, 1.2996840533004543, 0.9336972379048656, -0.27052674365591006, -1.0979688192011345, -2.717247263719289, -0.4323324283171194, -3.6856824441918055, 0.654006378412794, 1.2873574658953244, -0.13365060218057132, 0.8122855850054648, -0.21297599240919218, -1.2576912107356888, -0.40237138843252873, -1.4715178958235966, 1.9201865641824378, -1.920503765214723, -3.4804417252614828, 2.352258452814912, -0.7759156819149257, -0.4819554420900191, 1.0117709974713984, 2.7065289424643892, -1.6010320685563946, 2.153273808495681, 1.3553539174386393, 0.6796789081534905, 1.1509626913033741, -1.0787863117066308, 2.0064763927797253, -2.852501034429711, -0.08793194380418486, 1.549135347571992, -1.7791491853293633, -1.5472646669508676, -1.723154111290831, 1.5430055908490117, 1.3620149450585752, -0.34145029027411533, -1.0535335973791637, 3.082937597519443, -1.1135791169934355, -2.451108735251525, 1.2587566812655417, 3.114360461800962, -0.6130864292432091], [3.856228544082039, 0.71795008005552, -0.5435768581802966, -1.2581597134939986, -1.3720550115068384, -3.491768318704135, -2.7253396773555827, -2.124287074189029, 0.5975230669143886, 2.7076043969246846, -1.6628857543536621, 2.3457866420246942, 0.3489001582934426, 1.7693389903971704, 2.5320375048924255, 3.32379849438659, -0.6641409853433861, -2.549864114657941, 1.0140210854517133, -2.488645953453024, -0.9521479029342563, -1.6083495551127702, -1.6800234109134558, -1.3923211306009948, 2.3305434112963854, 0.3337627672535895, 0.6711827751708015, 0.4536077933648043, 2.8164595197670828, 0.9297455278910665, -1.1764013188104265, 1.769700575699504, 0.6131541507788922, 1.8773017838599602, 0.40297844710038855, -5.000201876464866, 1.9805691161903465, 1.1353767965233554, 1.3661018545182668, 0.21484465362640306, 2.6009758560330103, 1.4114091550131231, 0.5349312811209771, 0.2637274077023063, -3.5491143022972147, 1.6092728708513468, -0.33783753633461105, -2.2270900031325653, -0.04548757267355566, -3.618232082838669, -0.04773748723350211, -0.8598740843356351, 0.4102669936370443, -0.3626016714314126, 0.5282653434093696, -0.6381760391275945, 0.01506196882505817, -0.3260377902014769, 0.2814013717926106, 1.254929660261925, -1.5428904203285478, -1.83148187460506, 1.2415795120528792, -0.42637607912468833, -2.4673239306039085, -0.995796760108242, -1.4996768295849026, -1.2724111791745596, -2.106833996856902, 0.8372846418871512, 1.134915219560337, 3.22627083305605, -0.5371381826640017, 1.5387581906693548, 0.5738581079936239, 0.5611838318730923, -3.572067742584395, -2.1632936277531614, -2.260682976478269, 0.5806512351106701, -1.2619211314013952, -0.7556404555036972, 0.5984458403849451, -1.3845124227776926, 0.467431199419616, 3.197041396220767, -1.9698089428649501, 0.6633265472923779, -0.6060300828338949, -0.17092812225589107, -0.7420887275209656, 2.9709481789054237, 0.13985436844293597, 0.6487494288032485, 2.0965510443939444, 0.990844792439535, -1.7664583595079362, 4.317997482876143, 0.16340025797879096, -2.257017675634604, 0.19726398148508878, -1.4888122215557635, 0.20999063851222552, -1.9217182837541447, 0.8753624740963987, 0.32155413878742534, 2.909095650512764, 1.06290514218757, -0.8296167695897949, -5.1587445096353655, 0.6233722093216784, 1.1634278887317093, 1.5521545243836192, 1.6749369087211763, 0.686231288422653, 0.38312334130826775, 1.3094309769170356, 0.8006715840961237, -1.1664018204847837, 0.466061172915815, 1.577657830370772, 3.259750539857573, -0.9680803771516984, -0.33360694698937754, -1.3844079131116056, -0.5201165427723387, 0.5698503889207688, 1.2831294310605956, 1.076118674821318, -1.5662422271130654, 0.3554655618292408, 1.4061997382410925, -0.5894966078814684, -1.749998246501684, -2.133041142213965, 0.051354473256448575, -1.6402760684297935]], [[-0.5987345652390724, 0.26510753454277736, 0.2900721385437318, 0.6492699107993293]]]

static_submit_form =  "<html><body>" + open("static_html.template","r").read()

print("Привет!")
UPLOAD_FOLDER = './img/'
ALLOWED_EXTENSIONS = set(['jpg','jpeg','png'])

app = Flask(__name__)
app.config['MAX_CONTENT_LENGTH'] = 12 * 1024 * 1024
app.config['UPLOAD_FOLDER'] = UPLOAD_FOLDER
app.debug = True

def allowed_file(filename):
	return '.' in filename and \
		   filename.rsplit('.', 1)[1].lower() in ALLOWED_EXTENSIONS

def normalized_landmark_vector(landmarks):
	""" Нормализация "волшебных" точек
		На данный момент:
			Вертикальная ориентация лица
			Приведение к единичному масштабу
	"""

	# Считаем угол таким образом, что положительное направление - склонённость к правому плечу
	# Центр - 28-я точка - т.е. landmarks[27]

	nose_bridge = landmarks[27]

	eyes_vector_x, eyes_vector_y = landmarks[45][0] - landmarks[36][0], landmarks[45][1] - landmarks[36][1]
	angle = - math.atan(eyes_vector_y / eyes_vector_x)
	
	
	#print("Угол равен %f градусов (наклон к правому плечу)" % (angle * 180 / math.pi))
	verticalized = [rotate((x,y), origin = nose_bridge, angle = angle) for (x, y) in landmarks]

	# Временно - как хеш лица используем только глаза
	# verticalized = verticalized[42:48] + verticalized[36:42]

	((x1, y1), (x2, y2)) = find_rect_range(verticalized)
	width = x2 - x1
	height = y2 - y1
	
 
	normalized = verticalized
	normalized = [((x-x1) / width, (y-y1) / width) for (x, y) in verticalized]
	return normalized
		   

def distance(x1,y1, x2, y2):
	return math.sqrt( (x1-x2)**2 + (y1-y2)**2)

def magic_distances_from_landmarks(a):


	# Первая опорная точка
	xc1 = a[27][0]
	yc1 = a[27][1]


	# Вторая опорная точка
	xc2 = a[57][0]
	yc2 = a[57][1]


	distances = []

	for (x, y) in a:
		"""
		x.append(i[0])
		y.append(i[1])
		"""
		

		d1 = distance(x,y, xc1, yc1) 
		d2 = distance(x,y, xc2, yc2) 
		
		distances.append(d1)
		distances.append(d2)
	return distances




@app.route("/", methods=['GET', 'POST'])
def index():
	if request.method == 'POST':
		print("Заголовки request.headers: ", request.headers)
		file = request.files['file']
		print("Файлы request.files=%s" % request.files)
		if file and allowed_file(file.filename):
			print("Сохраняем файл")
			filename = secure_filename(file.filename)
			full_filename = os.path.join(app.config['UPLOAD_FOLDER'], filename)
			file.save(full_filename)
			print("Сохранили файл")


			img = imread_with_EXIF_orientation(full_filename) # Считали картинку и поместили ее в ndarray
			faces, confidence, idx = detector.run(img, 1)

			shape = predictor(img, faces[0])
			magic_dots = [(shape.part(i).x, shape.part(i).y) for i in range(0, 68)]
			print("_______________________\n", magic_dots, "\n_____________________")
			distances = magic_distances_from_landmarks(normalized_landmark_vector(magic_dots))
			result = feedforward(distances, weights)
			print("Result: ", result)
			return "<h2> Result: " + str(result) + "</h2>"+ static_submit_form


		else:
			return '{"Error":"123","ErrorText":"Bad file format"}'
	#return  "Тут мы ждем файлик!"
	return static_submit_form
	

print("Сейчас будем запускать сервер!")
if __name__ == "__main__":
	app.run(host='0.0.0.0', port=7777)